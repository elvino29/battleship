<style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font: 13px Helvetica, Arial; height: auto;}
    #form {margin-left:10px; padding-bottom:10px;position: fixed; bottom: 0; width: 100%;}
    #m{background-color: white;}
    #messages { list-style-type: none; margin: 0; padding: 0; }
    #messages li { padding: 5px 10px; }
    #messages li:nth-child(odd) { background: #eee; }
    #messages span { background-color: #F0E68C; float: right; padding-right: 0.5cm; }


    /*css speech*/
    li.speech {
        position: relative;
        width: 80%;
        height: 50px;
        line-height: 50px;
        /*background-color: #fff;*/
        border: 4px solid #666;
        /*-webkit-border-radius: 15px;*/
        /*-moz-border-radius: 15px;*/
        /*border-radius: 15px;*/
        -webkit-box-shadow: 1px 1px 2px #888;
        -moz-box-shadow: 1px 1px 2px #888;
        box-shadow: 1px 1px 2px #888;
    }
</style>

<span id="messages" ></span>
<ul id="messages" class="speech"></ul>

<!--<p class="speech" id="messages"></p>-->

<div id="remotes"></div>

<form action="" onsubmit="datetime();" id="form">
    <div class="mdl-grid">
        <div class="mdl-cell--9-col lead emoji-picker-container">
            <input id="m" autocomplete="off" data-emojiable="true" required />

        </div>


        <div class="mdl-cell--3-col" style="margin-left: 10px;">
            <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect" style="width: 100px;"><i class="material-icons">send</i></button>
        </div>

    </div>

</form>
<span id="author" hidden="hidden">{{user.name}}</span>


<script src="/bower_components/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="/Assets/js/material.min.js"></script>
<script src="/Assets/lib/js/jquery.emojiarea.js"></script>
<script src="/Assets/lib/js/emoji-picker.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
    $(function() {
        // Initializes and creates emoji set from sprite sheet
        window.emojiPicker = new EmojiPicker({
            emojiable_selector: '[data-emojiable=true]',
            assetsPath: '/app/assets/lib/img/',
            popupButtonClasses: 'fa fa-smile-o'
        });
        // Finds all elements with `emojiable_selector` and converts them to rich emoji input fields
        // You may want to delay this step if you have dynamically created input fields that appear later in the loading process
        // It can be called as many times as necessary; previously converted input fields will not be converted again
        window.emojiPicker.discover();
    });
</script>
<script>
    // Google Analytics
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-49610253-3', 'auto');
    ga('send', 'pageview');
</script>
<script>

    $(function () {
        var socket = io();
        var id = socket.id;
        $('#form').submit(function(){
            socket.emit('chat message', $('#m').val());
            $('#m').val('');
            return false;
        });
        socket.on('chat message', function(msg){
            var author = $('#author').text();
            $('#messages').append($('<span>').text(strDateTime)).append($('<li class="speech">').text(author+': '+msg));
            console.log('Vous etes deja expediteur');
        });
    });

    //Pad given value to the left with "0"
    function AddZero(num) {
        return (num >= 0 && num < 10) ? "0" + num : num + "";
    }

    function datetime() {
        var now = new Date();
        strDateTime = [[AddZero(now.getDate()),
            AddZero(now.getMonth() + 1),
            now.getFullYear()].join("/"),
            [AddZero(now.getHours()),
                AddZero(now.getMinutes())].join(":"),
            now.getHours() >= 12 ? "PM" : "AM"].join(" ");
    };

    // simplewebrtc files transfert

    var peer = new Peer('pick-an-id', {key: 't9i0q9889mnuq5mi'});

    var webrtc = new SimpleWebRTC({
        // we don't do video
        localVideoEl: '',
        remoteVideosEl: '',
        // dont ask for camera access
        autoRequestMedia: false,
        // dont negotiate media
        receiveMedia: {
            offerToReceiveAudio: 0,
            offerToReceiveVideo: 0
        }
    });

    // join without waiting for media
    webrtc.joinRoom('your awesome room name');

    // called when a peer is created
    webrtc.on('createdPeer', function (peer) {
        console.log('createdPeer', peer);
    });

    // receiving an incoming filetransfer
    peer.on('fileTransfer', function (metadata, receiver) {
        console.log('incoming filetransfer', metadata.name, metadata);
        receiver.on('progress', function (bytesReceived) {
            console.log('receive progress', bytesReceived, 'out of', metadata.size);
        });
        // get notified when file is done
        receiver.on('receivedFile', function (file, metadata) {
            console.log('received file', metadata.name, metadata.size);

            // close the channel
            receiver.channel.close();
        });
        filelist.appendChild(item);
    });

    // select a file
    var fileinput = document.createElement('input');
    fileinput.type = 'file';

    // send a file
    fileinput.addEventListener('change', function() {
        fileinput.disabled = true;

        var file = fileinput.files[0];
        var sender = peer.sendFile(file);
    });

</script>